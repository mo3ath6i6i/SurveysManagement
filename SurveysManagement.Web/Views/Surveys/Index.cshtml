@model IEnumerable<SurveysManagement.Web.Models.SurveyViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/assets/css/DataTables.css" rel="stylesheet" />
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Edit")
</p>
<table id="SurveysTable" class="display" style="width:100%">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Category</th>
            <th>Agent</th>
            <th>CreationDate</th>
            <th>StartDate</th>
            <th>EndDate</th>
            <th></th>
        </tr>
    </thead>
</table>
<script src="~/assets/js/DataTables.js"></script>
<script src="//cdn.datatables.net/plug-ins/1.10.16/dataRender/datetime.js"></script>
<script src="~/assets/js/moment.js"></script>
<script>

    $(document).ready(function () {

        $('#SurveysTable').DataTable(
            {
                "columnDefs": [
                    { "width": "5%", "targets": [0] },

                    { "className": "text-center custom-middle-align", "targets": [0, 1, 2, 3, 4, 5, 6] },
                ],
                "language":
                    {
                        "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
                    },
                "processing": true,
                "serverSide": true,
                "ajax":
                    {
                        "url": "@Url.Action("getsurveys", "Surveys")",
                        "type": "POST",
                        "dataType": "JSON"
                    },
                "columns": [
                            { "data": "Id" },
                            { "data": "Name" },
                            { "data": "Category" },
                            { "data": "Agent" },
                            {
                                "data": "CreationDate",
                                "type": "date ",
                                "render": function (value) {
                                    if (value === null) return "";

                                    var pattern = /Date\(([^)]+)\)/;
                                    var results = pattern.exec(value);
                                    var dt = new Date(parseFloat(results[1]));

                                    return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                                }
                            },
                            {
                                "data": "StartDate",
                                "type": "date ",
                                "render": function (value) {
                                    if (value === null) return "";

                                    var pattern = /Date\(([^)]+)\)/;
                                    var results = pattern.exec(value);
                                    var dt = new Date(parseFloat(results[1]));

                                    return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                                }
                            },
                            {
                                "data": "EndDate",
                                "type": "date ",
                                "render": function (value) {
                                    if (value === null) return "";

                                    var pattern = /Date\(([^)]+)\)/;
                                    var results = pattern.exec(value);
                                    var dt = new Date(parseFloat(results[1]));

                                    return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                                }
                            },
                            {// this is Actions Column
                                mRender: function (data, type, row) {
                                    var linkEdit = '@Html.ActionLink("Edit", "Edit", new {id= -1 })';
                                    linkEdit = linkEdit.replace("-1", row.Id);

                                    var linkViewUsers = '@Html.ActionLink("ViewUsers", "UserEntries", new {id= -1 })';
                                    linkViewUsers = linkViewUsers.replace("-1", row.Id);

                                    var linkDelete = '@Html.ActionLink("Delete", "Delete", new {id= -1 }, new {onclick = "return confirm(' you want to delete?'); " })';
                                    linkDelete = linkDelete.replace("-1", row.Id);

                                    //return linkDetails + " | " + linkEdit + " | " + linkDelete;
                                    return linkEdit + " | " + linkDelete + " | " + linkViewUsers;
                                }
                            }
                ]
            });
    });
</script>
<p>
    @Html.ActionLink("Create New", "Edit")
</p>
