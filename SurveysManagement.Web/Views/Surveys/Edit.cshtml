@model SurveysManagement.Web.Models.SurveyViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">

        <h4 style="text-shadow: 0px 0px 1px #ff0e0e;">Survey Info</h4>

        <input type="hidden" name="Id" value="@Model.Id" />




        <div class="form-group">
            <label class="control-label">Name</label>
            <input type="text" value="@Model.Name" name="Name" class="form-control" placeholder="Enter Name">

        </div>

        <div class="form-group">
            <label class="control-label">From</label>
            <div class='input-group date' id='datetimepickerStartDate'>
                <input type="text" value="@Model.StartDate" name="StartDate" data-provide="datepicker" class="form-control date-picker" placeholder="Enter From">
                <span class="input-group-addon d-inline">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label">To</label>
            <div class='input-group date' id='datetimepickerEndDate'>
                <input type="text" value="@Model.EndDate" name="EndDate" data-provide="datepicker" class="form-control date-picker" placeholder="Enter To">
                <span class="input-group-addon d-inline">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label">Client</label>
            <select value="@Model.AgentId" name="AgentId" class="form-control custom-select">
                @{
                    string chk = "";
                    foreach (var typ in Model.Agents)
                    {
                        chk = "";
                        if (Model.AgentId != null && typ.Id == Model.AgentId)
                        {
                            chk = "selected";
                        }
                        <option title="@typ.Text" value="@typ.Id" @chk>@typ.Text</option>
                    }
                }
            </select>
        </div>

        <div class="form-group">
            <label class="control-label">Type</label>
            <select value="@Model.CategoryId" name="CategoryId" class="form-control custom-select">
                @{
                    foreach (var typ in Model.Categories)
                    {
                        chk = "";
                        if (Model.CategoryId != null && typ.Id == Model.CategoryId)
                        {
                            chk = "selected";
                        }
                        <option title="@typ.Text" value="@typ.Id" @chk>@typ.Text</option>
                    }
                }
            </select>
        </div>


        <hr />

        <div class="form-group">
            @{
                string hdnSurveyQuestionsValue = "";
                if (string.IsNullOrEmpty(Model.hdnSurveyQuestions))
                {
                    if (Model.SurveyQuestions != null)
                    {
                        foreach (var item in Model.SurveyQuestions)
                        {
                            hdnSurveyQuestionsValue += "," + item.Id.ToString() + ",";
                        }
                    }
                }
                else
                {
                    hdnSurveyQuestionsValue = Model.hdnSurveyQuestions;
                }
            }
            <input type="hidden" name="hdnSurveyQuestions" id="hdnSurveyQuestions" value="@hdnSurveyQuestionsValue" />
            <label class="col-form-label-lg" style="text-shadow: 0px 0px 1px #ff0e0e;">Survey Questions</label>

            <div class="form-group">
                <label class="control-label" for="Questions">Type Question</label>
                <input type="text" name="CustomerName" id="CustomerName" class="form-control" placeholder="Type You'r Question..">
                <input disabled="disabled" type="text" name="CustomerID" id="CustomerID" class="form-control">
            </div>




            <div id="MainQuestion" class="form-group">
                <label class="control-label" for="Questions">Question</label>
                <br />
                <select id="Questions" class="form-control js-example-basic-single" placeholder="Select Question">
                    <option disabled="disabled" value="-1" selected=""> Select a Question</option>
                </select>
                @*<input class="checkbox-inline" type="checkbox" name="NoAnswer" value="NoAnswer" id="NoAnswer"> No Answer*@
                <div style="padding-top:3px">
                    <label class="containerCheckbox ">
                        No Answer
                        <input type="checkbox" value="NoAnswer" id="NoAnswer">
                        <span class="checkmark"></span>
                    </label>
                </div>
                <div style="padding-top:3px">
                    <label class="containerCheckbox ">
                        Independent Question
                        <input type="checkbox" value="IndQ" id="IndQ" checked="checked">
                        <span class="checkmark"></span>
                    </label>
                </div>

                <div id="IndDiv">

                    <div>
                        <select id="IndAnswer" class="form-control js-example-basic-single" placeholder="Select Independent Answer">
                            @*<option value="-1" selected=""> Select Independent Answer</option>*@
                        </select>

                    </div>
                    <br />
                    <div>
                        <select id="IndQuestions" class="form-control js-example-basic-single" placeholder="Select Independent Question">
                            @*<option value="-1" selected=""> Select Independent Question</option>*@
                        </select>

                    </div>

                </div>

            </div>



            <hr />
            <table id="QuestionsTable" class="display" style="width:100%">
                <thead>
                    <tr>
                        <th></th>
                        <th>Id</th>
                        <th>Question</th>
                        <th>Type</th>
                    </tr>
                </thead>
            </table>
        </div>

        <hr />

        <div class="form-group">
            @{
                string hdnUserSurveysValue = "";
                if (string.IsNullOrEmpty(Model.hdnUserSurveys))
                {
                    if (Model.UserSurveys != null)
                    {
                        foreach (var item in Model.UserSurveys)
                        {
                            hdnUserSurveysValue += "," + item.Id.ToString() + ",";
                        }
                    }
                }
                else
                {
                    hdnUserSurveysValue = Model.hdnUserSurveys;
                }
            }

            <input type="hidden" name="hdnUserSurveys" id="hdnUserSurveys" value="@hdnUserSurveysValue" />
            <label class="col-form-label-lg" style="text-shadow: 0px 0px 1px #ff0e0e;">Survey Users</label>
            <table id="UsersTable" class="display" style="width:100%">
                <thead>
                    <tr>
                        <th></th>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>BirthDate</th>
                    </tr>
                </thead>
            </table>

        </div>


        <hr />


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" onclick="fillIsPreview('false');" class="btn btn-default" />
                <input type="submit" value="Preview" onclick="fillIsPreview('true');" class="btn btn-default" />
            </div>
        </div>

    </div>



    <input id="hfIsPreview" type="hidden" name="hfIsPreview" value='@Model.hfIsPreview' />
    <input id="hfPreviewId" type="hidden" name="hfPreviewId" value='@Model.hfPreviewId' />


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

}

















<link href="~/assets/css/DataTables.css" rel="stylesheet" />
<link href="~/assets/css/select.dataTable.min.css" rel="stylesheet" />
@*Select2*@
<link href="~/Content/css/select2.css" rel="stylesheet" />
<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.js"></script>
<script src="~/Scripts/select2.min.js"></script>

<script src="~/assets/js/DataTables.js"></script>
<script src="~/assets/js/datatables.select.min.js"></script>
<script src="~/assets/js/dataTables.buttons.min.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>

<script>

    $(document).ready(function () {


        $(function () {
            $('#datetimepickerEndDate').datetimepicker();
            $('#datetimepickerStartDate').datetimepicker({
                useCurrent: false //Important! See issue #1075
            });
            //$("#datetimepickerStartDate").on("dp.change", function (e) {
            //    $('#datetimepickerEndDate').data("DateTimePicker").minDate(e.date);
            //});
            //$("#datetimepickerEndDate").on("dp.change", function (e) {
            //    $('#datetimepickerStartDate').data("DateTimePicker").maxDate(e.date);
            //});
        });
        if ($('#hfIsPreview').val() == 'true')
        {
            var tempId = parseInt($('#hfPreviewId').val());
            openInNewTab('@Url.Action("viewtempsurvey", "Surveys")' + '/' + tempId);
        }
        else if ($('#hfIsPreview').val() == 'false')
        {
        //show success message
        }
    });

    function openInNewTab(url) {
        var win = window.open(url, '_blank');
        win.focus();
    }

    /////datepicke/////
    function fillIsPreview(value) {
        $('#hfIsPreview').val(value);
    }

    function getListsInfo() {
        var selectedQuestions = $('#QuestionsTable tr').next('.selected').each(function () { this.id });
        var selectedUsers = $('#UsersTable tr').next('.selected').each(function () { this.id });
    }

    function retainSelection() {
        //debugger;
        $('#QuestionsTable tbody tr').each(function (i, row) {
            var itemId = this.id;
            if ($('#hdnSurveyQuestions').val().indexOf(',' + itemId + ',') > -1) {
                $(this).addClass('selected');
            }
            else {
                $(this).removeClass('selected');
            }

        });

        $('#UsersTable tbody tr').each(function (i, row) {
            var itemId = this.id;
            if ($('#hdnUserSurveys').val().indexOf(',' + itemId + ',') > -1) {
                $(this).addClass('selected');
            }
            else {
                $(this).removeClass('selected');
            }

        });
    }

    $(document).ready(function ()
    {
        $('#QuestionsTable').DataTable(
        {
            "initComplete": function () {
                this.api().on( 'draw', function () {
                    retainSelection();
                } );
            },
            "columnDefs": [
                { "width": "5%", "targets": [0] },
                { "className": "text-center custom-middle-align", "targets": [0, 1, 2, 3] },
            ],
            "language":
                {
                    "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
                },
            "processing": true,
            "serverSide": true,
            "ajax":
                {
                    "url": "@Url.Action("getquestions", "Question")",
                    "type": "POST",
                    "dataType": "JSON"
                },
            "columns": [
                        {"data": "", // can be null or undefined
                         "defaultContent": ""
                        },
                        {
                            "data": "Id"
                        },
                        {
                            "data": "Question", // can be null or undefined
                            "defaultContent": ""
                        },
                        {
                            "data": "Type", // can be null or undefined
                            "defaultContent": ""
                        }
            ],
            "rowId": 'Id',
            "columnDefs": [{
                "orderable": false,
                "className": 'select-checkbox',
                "targets": 0
            }],
            "select": {
                "style" : "multi",
                "selector": 'td:first-child'
            }
        });

        //var selectedQuestionsArray = [];
        $('#QuestionsTable tbody').on('click', 'td:first-child', function () {
            var id = this.parentElement.id;
            var index = $('#hdnSurveyQuestions').val().indexOf(',' + id + ',');

            if (index === -1) {
                $('#hdnSurveyQuestions').val($('#hdnSurveyQuestions').val() + ',' + id + ',');
            } else {
                $('#hdnSurveyQuestions').val($('#hdnSurveyQuestions').val().replace(',' + id + ',', ''));
            }

            //$(this).parentElement.toggleClass('selected');
        });
        //////////////////////////
        $('#UsersTable').DataTable(
        {
            "initComplete": function () {
                this.api().on('draw', function () {
                    retainSelection();
                });
            },
            "columnDefs": [
                { "width": "5%", "targets": [0] },
                { "className": "text-center custom-middle-align", "targets": [0, 1, 2, 3, 4, 5] },
            ],
            "language":
                {
                    "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
                },
            "processing": true,
            "serverSide": true,
            "ajax":
                {
                    "url": "@Url.Action("getUsersOnly", "Account")",
                    "type": "POST",
                    "dataType": "JSON"
                },
            "columns": [
                        {
                            "data": "", // can be null or undefined
                            "defaultContent": ""
                        },
                        {"data": "Id"},
                        { "data": "Name" },
                        { "data": "Email" },
                        { "data": "Phone" },
                        {
                            "data": "BirthDate",
                            "type": "date ",
                            "render": function (value) {
                                if (value === null) return "";

                                var pattern = /Date\(([^)]+)\)/;
                                var results = pattern.exec(value);
                                var dt = new Date(parseFloat(results[1]));

                                return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                            }
                        }
            ],
            "rowId": 'Id',
            "columnDefs": [{
                "orderable": false,
                "className": 'select-checkbox',
                "targets": 0
            }],
            "select": {
                "style": "multi",
                "selector": 'td:first-child'
            }
        });

        //var selectedUsersArray = [];
        $('#UsersTable tbody').on('click', 'td:first-child', function () {
            var id = this.parentElement.id;
            var index = $('#hdnUserSurveys').val().indexOf(',' + id + ',');

            if (index === -1) {
                $('#hdnUserSurveys').val($('#hdnUserSurveys').val() + ',' + id + ',');
            } else {
                $('#hdnUserSurveys').val($('#hdnUserSurveys').val().replace(',' + id + ',', ''));
            }

            //$(this).parentElement.toggleClass('selected');
        });

        setTimeout(function () { retainSelection(); }, 1000);










        // Autocomplite Txt
        $("#CustomerName").autocomplete({
        source: function (request, response) {
            $.ajax({

                url: '@Url.Action("GetVisitCustomer", "Surveys")',
                datatype: "json",
                data: {
                    Areas: 'Sales',
                    term: request.term
                },
                success: function (data) {
                    response($.map(data, function (item) {
                        return {

                            label: item.Name,
                            value: item.Name,
                            customerId: item.ID
                        }
                    }))
                }
            })
            },

        select: function (event, ui) {
            $("#CustomerID").val(ui.item.customerId);
        }
        });









    }); //end $(document).ready



</script>
<script>


        //$('.js-example-basic-single').select2();
        //$(".js-example-basic-single").select2({ closeOnSelect: false });
        //$('#Questions').select2('data');
        //$('#Questions').selectedQuestions
        $("#Questions").select2({
            placeholder: "Select a Ouestion",
            allowClear: true
        });

        $("#IndAnswer").select2({
            placeholder: "Select Independent Answer",
            allowClear: true
        });

        $("#IndQuestions").select2({
            placeholder: "Select Independent Question",
            allowClear: true
        });


        // Fill DDL of Questions
        $.getJSON("@Url.Action("GetQuestionsList", "Surveys")", function (json)
        {
            $.each(json, function(i, obj){
                $('#Questions').append($('<option>').text(obj.Name).attr('value', obj.ID));
            });
        });








    $("#Questions").on("change", function () {
        $('#IndQuestions').empty();
        if ($("#IndQ").is(":checked")) {
            var url = '@Url.Action("GetIndQuestionsList", "Surveys")'; 
            $.getJSON(url, { qID: $('#Questions').val() }, function (json) {
                $.each(json, function (i, obj) {
                    $('#IndQuestions').append($('<option>').text(obj.Name).attr('value', obj.ID));
                });
            });
        }
    });


    $("#Questions").on("change", function () {
        $('#IndAnswer').empty();
        if ($("#IndQ").is(":checked")) {
            var url = '@Url.Action("GetAnswersOfQuestion", "Surveys")'; 
            $.getJSON(url, { qID: $('#Questions').val() }, function (json) {

                debugger;
                $.each(json, function (i, obj) {
                    $('#IndAnswer').append($('<option>').text(obj.Name).attr('value', obj.ID));
                });
            });
        }
    });





    // Show-Hide Div of Independent
    $(function () {
        $("#IndQ").click(function () {
            debugger;
            if ($(this).is(":checked")) {
                $("#IndDiv").show();
                $('#IndQuestions').empty();
                $('#IndAnswer').empty();

            } else {
                $("#IndDiv").hide();
                $('#IndQuestions').empty();
                $('#IndAnswer').empty();

            }
        });
    });








</script>




<style>
    /* The containerCheckbox */
    .containerCheckbox {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        /*font-size: 22px;*/
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default checkbox */
        .containerCheckbox input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    /* Create a custom checkbox */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 18px;
        width: 19px;
        background-color: #eee;
    }

    /* On mouse-over, add a grey background color */
    .containerCheckbox:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the checkbox is checked, add a blue background */
    .containerCheckbox input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the checkmark when checked */
    .containerCheckbox input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the checkmark/indicator */
    .containerCheckbox .checkmark:after {
        left: 7px;
        top: 2px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    }
</style>